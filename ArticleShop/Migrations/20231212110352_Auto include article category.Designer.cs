// <auto-generated />
using System;
using ArticleShop.Models.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArticleShop.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    [Migration("20231212110352_Auto include article category")]
    partial class Autoincludearticlecategory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArticleShop.Models.Database.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("ExpiryDate")
                        .HasColumnType("date");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a3e68cfe-868a-4fd8-947a-e9e5877febe5"),
                            CategoryId = new Guid("613416ee-1931-40a2-a6a4-dc2167c8d197"),
                            ExpiryDate = new DateOnly(2023, 12, 20),
                            Name = "Chocolate bar",
                            Price = 2.34m
                        },
                        new
                        {
                            Id = new Guid("cb78fbe0-54a4-4440-a553-30e84d0ed605"),
                            CategoryId = new Guid("0413852e-f5e3-4741-b76a-7c62b94fe22c"),
                            ExpiryDate = new DateOnly(2033, 12, 20),
                            Name = "Bird cage",
                            Price = 47.29m
                        },
                        new
                        {
                            Id = new Guid("3e9d555a-51c5-4b42-ae0c-b9dc212a0283"),
                            CategoryId = new Guid("b12e5e71-3b93-400f-8714-4c25a2eee14c"),
                            ExpiryDate = new DateOnly(2034, 7, 7),
                            Name = "Flute coursebook",
                            Price = 10.00m
                        },
                        new
                        {
                            Id = new Guid("f46c75b5-71ed-41a0-acc3-434cafd51388"),
                            CategoryId = new Guid("9973e278-543f-48c4-9f3c-abe905ded94f"),
                            ExpiryDate = new DateOnly(2043, 1, 1),
                            Name = "Gloomhaven",
                            Price = 80.99m
                        });
                });

            modelBuilder.Entity("ArticleShop.Models.Database.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e17ecc3c-4d6d-46b4-9eec-053f71050970"),
                            Name = "Others"
                        },
                        new
                        {
                            Id = new Guid("613416ee-1931-40a2-a6a4-dc2167c8d197"),
                            Name = "Food"
                        },
                        new
                        {
                            Id = new Guid("9973e278-543f-48c4-9f3c-abe905ded94f"),
                            Name = "Board Game"
                        },
                        new
                        {
                            Id = new Guid("c7ae053d-30be-4c81-b5ad-e339c16759a7"),
                            Name = "Computer Game"
                        },
                        new
                        {
                            Id = new Guid("a8906ad8-de4b-4844-a78b-63487e6f62ef"),
                            Name = "Book"
                        },
                        new
                        {
                            Id = new Guid("fdbccd1e-454d-49ed-adf5-51bd24894856"),
                            Name = "Furniture"
                        },
                        new
                        {
                            Id = new Guid("b12e5e71-3b93-400f-8714-4c25a2eee14c"),
                            Name = "Music"
                        },
                        new
                        {
                            Id = new Guid("07c7453d-6c3c-492a-912e-0785423d3ec7"),
                            Name = "School"
                        },
                        new
                        {
                            Id = new Guid("0413852e-f5e3-4741-b76a-7c62b94fe22c"),
                            Name = "Animals"
                        });
                });

            modelBuilder.Entity("ArticleShop.Models.Database.Article", b =>
                {
                    b.HasOne("ArticleShop.Models.Database.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
