// <auto-generated />
using System;
using ArticleShop.Models.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArticleShop.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    [Migration("20231212080058_Added CategoryId to Article, seeding database")]
    partial class AddedCategoryIdtoArticleseedingdatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArticleShop.Models.Database.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("ExpiryDate")
                        .HasColumnType("date");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("db15d3dd-eb03-4a50-ac75-1c6dccb4f93a"),
                            CategoryId = new Guid("1dc7885c-e02f-4851-8eb5-7e783c8d95b7"),
                            ExpiryDate = new DateOnly(2023, 12, 20),
                            Name = "Chocolate bar",
                            Price = 2.34m
                        },
                        new
                        {
                            Id = new Guid("7086f7de-9d33-4406-a98e-59f045dc4553"),
                            CategoryId = new Guid("6a86bf12-1da4-4666-ac3c-5a00fb4157b7"),
                            ExpiryDate = new DateOnly(2033, 12, 20),
                            Name = "Bird cage",
                            Price = 47.29m
                        },
                        new
                        {
                            Id = new Guid("e295a6c9-efe2-4ecf-8100-a2192d29f096"),
                            CategoryId = new Guid("cd92cd07-b076-4b09-9c17-3502b2467e07"),
                            ExpiryDate = new DateOnly(2034, 7, 7),
                            Name = "Flute coursebook",
                            Price = 10.00m
                        },
                        new
                        {
                            Id = new Guid("82c42e41-cd24-4a6a-b84d-682c34400bfb"),
                            CategoryId = new Guid("52cb6d95-dcc8-45d9-94d2-9a3e9c5fb546"),
                            ExpiryDate = new DateOnly(2043, 1, 1),
                            Name = "Gloomhaven",
                            Price = 80.99m
                        });
                });

            modelBuilder.Entity("ArticleShop.Models.Database.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("505e7803-18c2-4514-88e0-cf4facff31bb"),
                            Name = "Others"
                        },
                        new
                        {
                            Id = new Guid("1dc7885c-e02f-4851-8eb5-7e783c8d95b7"),
                            Name = "Food"
                        },
                        new
                        {
                            Id = new Guid("52cb6d95-dcc8-45d9-94d2-9a3e9c5fb546"),
                            Name = "Board Game"
                        },
                        new
                        {
                            Id = new Guid("d1191d25-929a-4067-829c-05258ab0c81c"),
                            Name = "Computer Game"
                        },
                        new
                        {
                            Id = new Guid("2355175a-146b-4441-a823-11cbe64136d7"),
                            Name = "Book"
                        },
                        new
                        {
                            Id = new Guid("67fc1d0a-2975-4399-a536-7d3d7f712981"),
                            Name = "Furniture"
                        },
                        new
                        {
                            Id = new Guid("cd92cd07-b076-4b09-9c17-3502b2467e07"),
                            Name = "Music"
                        },
                        new
                        {
                            Id = new Guid("5f50a9d1-5480-4f08-b831-6a0e1b77e7ff"),
                            Name = "School"
                        },
                        new
                        {
                            Id = new Guid("6a86bf12-1da4-4666-ac3c-5a00fb4157b7"),
                            Name = "Animals"
                        });
                });

            modelBuilder.Entity("ArticleShop.Models.Database.Article", b =>
                {
                    b.HasOne("ArticleShop.Models.Database.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
