@model ArticleShop.Models.ShopViewModel

@{
    ViewData["Title"] = "Index";
}

@section styles {
    <link rel="Stylesheet" href="~/css/grid_with_search_v2.css" />
}

<div class="table-container">
    <h1>Articles</h1>
    <div class="upper-div">
        <form asp-action="Search" method="get">
            <input type="search" id="searchbar" placeholder="Search.." name="searchValue">
            <input type="submit" value="Search" />
        </form>
        <form asp-action="SearchCategory" method="get">
            <select asp-for="SelectedCategory" name="categoryId" asp-items="@Model.Categories" id="searchedCategory" style="margin:20px;"></select>
            <input type="submit" value="Filter" />
        </form>
    </div>
    <table class="main-table" id="searchTable">
        <tr>
            <th>
                Photo
            </th>
            <th>
                Name
            </th>
            <th>
                Price
            </th>
            <th>
                Category
            </th>
            <th>
                Expires
            </th>
        </tr>

        @foreach (var article in Model.Articles)
        {
            <tr>
                <td>
                    <img src="@article.ImagePath" height="80" width="80" alt="@article.Name image" />
                </td>
                <td>
                    @article.Name
                </td>
                <td>
                    @article.Price
                </td>
                <td>
                    @article.Category.Name
                </td>
                <td>
                    @article.ExpiryDate
                </td>
            </tr>
        }
    </table>
</div>



@* @section Scripts {
    <script>
        window.onload = function () {
            let categories = document.getElementById('searchedCategory');
            let articlesWithCategories = document.getElementById("searchTable");
            let articleRows = articlesWithCategories.getElementsByTagName("tr");

            categories.onchange = function () {
                console.log(categories.value.toLowerCase());
                repopulateTable(categories.value.toLowerCase());
            }

            let repopulateTable = function (category) {
                for (let i = 1; i < articleRows.length; i++) {
                    let row = articleRows[i];
                    let rowData = row.getElementsByTagName("td");
                    row.style.display = "";
                    let itemCategory = rowData[3].innerText.toLowerCase();

                    if (itemCategory === category || category === "all")
                        row.style.display = "";
                    else
                        row.style.display = "none";
                }
            };
        }        
    </script>
} *@
